---
openapi: 3.0.1
info:
  description: API for Users Management
  version: v1
  title: Users
host: localhost
basePath: /v1
tags:
- name: user
  description: Operations about user
schemes:
- https
- http
paths:
  /users:
    get:
      tags:
      - user
      summary: Get all users
      description: Returns a json with all users (optionally sorted and ordered, default - sorted by id descending)
      operationId: getUsers
      produces:
      - application/json
      parameters:
      - name: sort_by
        in: query
        description: sort method (asc, desc by last name, and salary)
        required: false
        type: string
        enum:
        - lname_desc
        - lname_asc
        - ysalary_desc
        - ysalary_asc
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
      - user
      summary: Create new user
      operationId: createUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: userId
        description: User object to be created
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "422":
          description: Unprocessable entity
        "404":
          description: Not found
  /users/{userId}:
    get:
      tags:
      - user
      summary: Find a user
      description: Returns a single user
      operationId: getUserById
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: ID of user to return
        required: true
        type: integer
        format: int64
      responses:
        "422":
          description: Unprocessable entity
        "404":
          description: Not found
    put:
      tags:
      - user
      summary: Update a user
      operationId: putUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: User object to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: user
        description: User object to be updated
        required: true
        schema:
          $ref: '#/definitions/user'
      responses:
        "422":
          description: Unprocessable entity
        "404":
          description: Not found
    delete:
      tags:
      - user
      summary: Delete a user
      operationId: deleteUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        description: User object to be deleted
        required: true
        type: integer
        format: int64
      responses:
        "422":
          description: Unprocessable entity
        "404":
          description: Not found
definitions:
  User:
    type: object
    required:
    - id
    - fname
    - lname
    - ysalary
    properties:
      id:
        type: integer
      fname:
        type: string
      lname:
        type: string
      ysalary:
        type: integer
  user:
    type: object
    required:
    - user
    properties:
      user:
        $ref: '#/definitions/User'
